@rendermode InteractiveServer

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">myWebApp</a>
    </div>
</div>

<SfTreeView TValue="TreeItem">
    <TreeViewFieldsSettings DataSource="@TreeDataSource" Id="NodeId" Text="NodeText" Expanded="Expanded" IconCss="Icon"
        Child="@("Child")"></TreeViewFieldsSettings>
</SfTreeView>



@code {

    List<TreeItem> TreeDataSource = new List<TreeItem>();
    protected override void OnInitialized()
    {
        base.OnInitialized();

        TreeDataSource.Add(new
            TreeItem
            {
                NodeId = "00",
                NodeText = "Home",
                Icon = "fa fa-home",
                Expanded = true,
                NavigateUrl = "/"
            }
        );

        TreeDataSource.Add(new
            TreeItem
            {
                NodeId = "01",
                NodeText = "Anagrafiche",
                Expanded = false,
                NavigateUrl = "/",
                Icon = "fa fa-users",
                Child = new List<TreeItem>()
                        {
                            new TreeItem { NodeId = "01-01", NodeText = "Agenti", Icon = "fa fa-user-circle", NavigateUrl="Agenti" },
                            new TreeItem { NodeId = "01-02", NodeText = "Clienti", Icon = "fa fa-user", NavigateUrl="Clienti" },
                            new TreeItem { NodeId = "01-08", NodeText = "Cond. Pagamento", Icon = "fa fa-credit-card", NavigateUrl="Pagamenti" },
                            new TreeItem { NodeId = "01-09", NodeText = "Zone", Icon = "fa fa-map-marker", NavigateUrl="Zone" }
                        }
            }
        );

    }
    class TreeItem
    {
        public string? NodeId { get; set; }
        public string? NodeText { get; set; }
        public string? Icon { get; set; }
        public bool Expanded { get; set; }
        public bool Selected { get; set; }
        public string? NavigateUrl { get; set; }
        public List<TreeItem>? Child { get; set; }
    }



}
